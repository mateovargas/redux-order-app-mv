{"ast":null,"code":"var _jsxFileName = \"/Users/mateovargas/Documents/repos/redux-order-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Fragment, useEffect } from 'react';\nimport uiActions from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data'\n      }));\n      const response = await fetch('https://redux-order-app-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed!');\n      }\n\n      const responseData = await response.json();\n      dispatch(uiActions.showNotification({\n        status: 'Success',\n        title: 'Success!',\n        message: 'Sent cart data successfully'\n      }));\n    };\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Error sending cart data.'\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ym533N9pcV2ZQROugfAj7yssIY8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mateovargas/Documents/repos/redux-order-app/src/App.js"],"names":["Cart","Layout","Products","useSelector","useDispatch","Fragment","useEffect","uiActions","Notification","App","dispatch","showCart","state","ui","cartIsVisible","cart","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","responseData","json","catch","error"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,aAAnB,CAA5B;AACA,QAAMC,IAAI,GAAGZ,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAxB;AACA,QAAMC,YAAY,GAAGb,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASG,YAAnB,CAAhC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,YAAY,GAAG,YAAY;AAC/BP,MAAAA,QAAQ,CAACH,SAAS,CAACW,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,SAD0B;AAElCC,QAAAA,KAAK,EAAE,YAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAKA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAAD,EAAkE;AAC5FC,QAAAA,MAAM,EAAE,KADoF;AAE5FC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAFsF,OAAlE,CAA5B;;AAIA,UAAG,CAACO,QAAQ,CAACM,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,YAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;AACArB,MAAAA,QAAQ,CAACH,SAAS,CAACW,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,SAD0B;AAElCC,QAAAA,KAAK,EAAE,UAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAMD,KApBD;;AAqBAJ,IAAAA,YAAY,GAAGe,KAAf,CAAqBC,KAAK,IAAI;AAC5BvB,MAAAA,QAAQ,CAACH,SAAS,CAACW,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,OAD0B;AAElCC,QAAAA,KAAK,EAAE,OAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAKD,KAND;AAOD,GA7BQ,EA6BN,CAACN,IAAD,EAAOL,QAAP,CA7BM,CAAT;AA8BA,sBACE,QAAC,QAAD;AAAA,eACGM,YAAY,iBAAI,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEA,YAAY,CAACG,MAAnC;AAA2C,MAAA,KAAK,EAAEH,YAAY,CAACI,KAA/D;AAAsE,MAAA,OAAO,EAAEJ,YAAY,CAACK;AAA5F;AAAA;AAAA;AAAA;AAAA,YADnB,eAEE,QAAC,MAAD;AAAA,iBACGV,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA7CQF,G;UACUL,W,EACAD,W,EACJA,W,EACQA,W;;;KAJdM,G;AA+CT,eAAeA,GAAf","sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Fragment, useEffect} from 'react';\nimport uiActions from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data'\n      }));\n      const response = await fetch('https://redux-order-app-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if(!response.ok){\n        throw new Error('Sending cart data failed!');\n      }\n      const responseData = await response.json();\n      dispatch(uiActions.showNotification({\n        status: 'Success',\n        title: 'Success!',\n        message: 'Sent cart data successfully'\n      }));\n\n    }\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Error sending cart data.'\n      }));\n    });\n  }, [cart, dispatch]);\n  return (\n    <Fragment>\n      {notification && <Notification status={notification.status} title={notification.title} message={notification.message}/>}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}